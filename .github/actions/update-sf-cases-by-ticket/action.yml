name: "Update Salesforce Cases by Ticket"
description: "Parses commit messages for ticket numbers and updates matching Salesforce Cases"
inputs:
  kerun-instance-url:
    description: "Salesforce instance URL"
    required: true
  jwt-server-key:
    description: "JWT server key"
    required: true
  deployment-user:
    description: "Salesforce deployment username"
    required: true
  consumer-key:
    description: "Salesforce connected app client ID"
    required: true
  jira-ticket-status:
    description: "The status to set on matching Salesforce Cases"
    required: true

runs:
  using: "composite"
  steps:
    - name: Authorize Kerun ORG
      shell: bash
      run: |
        KEY_FILE="server.key"
        echo "${{ inputs.jwt-server-key }}" > "$KEY_FILE"

        sf org login jwt \
          --username "${{ inputs.deployment-user }}" \
          --jwt-key-file "$KEY_FILE" \
          --client-id "${{ inputs.consumer-key }}" \
          --instance-url "${{ inputs.kerun-instance-url }}" \
          --set-default

    - name: Extract ticket numbers from commits
      shell: bash
      run: |
        echo "Parsing commit messages..."
        COMMIT_SHA="${{ github.sha }}"
        echo "Latest commit: $COMMIT_SHA"
        
        # Ensure full git history
        git fetch --unshallow || true

        PR_COMMITS=$(git log -n 10 --pretty=format:%s)
        echo "Recent commit messages:"
        echo "$PR_COMMITS"
        
        echo "$PR_COMMITS" | grep -oiE '[A-Z]{2,}-[0-9]+' | sort -u > ticket_numbers.txt || true
        
        if [ ! -s ticket_numbers.txt ]; then
          echo "No ticket numbers found."
        else
          echo "Found ticket numbers:"
          cat ticket_numbers.txt
        fi


    - name: Update Cases based on ticket numbers
      shell: bash
      run: |
        while IFS= read -r TICKET; do
          echo "Processing ticket: $TICKET"
          CASE_IDS=$(sf data query \
            --query "SELECT Id FROM Case WHERE KS_JIRATicket__c = '$TICKET'" \
            --result-format csv | tail -n +2)

          if [ -z "$CASE_IDS" ]; then
            echo "⚠️ No cases found for $TICKET"
            continue
          fi

          for CASE_ID in $CASE_IDS; do
            echo "✅ Updating Case ID: $CASE_ID"
            sf data update record \
              -s Case \
              -i "$CASE_ID" \
              -v "Status='${{ inputs.jira-ticket-status }}'"
          done

        done < ticket_numbers.txt
